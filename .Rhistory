system2('open',paste0(path,'/program/shader_windows.console.exe'))})
})(funr::get_script_path())
decimalplaces=function(n){
if(n-round(n)<=.Machine$double.eps^0.5){return(0)}
nchar(strsplit(sub('0+$','',as.character(n)),".",fixed=T)[[1]][[2]])}
dec2bin=function(n){ #takes input of positive numeric decimal
if(is.na(n)){return(rep('-',32))}
output=as.numeric(intToBits(n))
return(output)}
bin2dec=function(n){
strtoi(stringi::stri_reverse(n),base=2)} #takes input of vector representation of binary value
clamp=function(x,l,u){ifelse(x<l,l,ifelse(x>u,u,x))}
split_mat=function(mat,n=16000){
size=ceiling(dim(mat)[-3]/n) #16000 pixel max size of chunk
lapply(1:size[2],\(x){
lapply(1:size[1],\(y){
cat(x,y,'  \r')
mat[((y-1)*n+1):clamp(y*n,0,dim(mat)[1]),((x-1)*n+1):clamp(x*n,0,dim(mat)[2])]})})|>
unlist(recursive=F)}
tif2png=function(tif,dst){
options(scipen=999)
cat('Loading TIF image\n')
file=strsplit(tif,'/')[[1]][length(strsplit(tif,'/')[[1]])]|>
gsub('.tif','',x=_)
img=(raster::raster(tif)|>
raster::as.matrix())
images=split_mat(img)
rm(img)
gc()
cat('Converting values to png layers\n')
for(index in 1:length(images)){
t=Sys.time()
cat('chunk',index,'\n')
img=images[[index]]
img[is.na(img)]=0
cat('*\tGrabbing unique values\n')
n=unique(abs(as.numeric(img)))
dp=max(sapply(n,decimalplaces))|>
c(decimalplaces(floor(max(n))/(1e5)),128)|>
min()
img=floor(img*(10^dp))
n=unique(abs(as.numeric(img)))|>
c(0)
cat('*\tBuilding lookup table\n')
lookup=
sapply(n,dec2bin)|>
paste(collapse='')|>
stringi::stri_sub(seq(1,32*length(n),by=32),length=32)|>
sapply(\(s)stringi::stri_sub(s,c(1,9,17,25),length=8))|>
apply(1,\(n)bin2dec(n))|>
data.table::as.data.table()|>
cbind(as.character(n))|>
setNames(c(1,2,3,4,'n'))|>
unique()
data.table::setindex(lookup,n)
cat('*\tConverting data\n')
output=lookup[as.character(abs(img)),on='n']
output=lapply(1:3,\(l)matrix(output[[l]]/255,ncol=ncol(img)))|>
c(list(((img>=0)-.5)*dp/255+.5))|>
simplify2array()
output[is.na(output)]=0
cat('*\tSaving PNG image\n')
if(all(is.na(output[,,4]))){
cat('No data\n')
return()}
dir.create(paste0(dst,'/',file),showWarnings=F)
png::writePNG(output[,,],paste0(dst,'/',file,'/',file,'_',index,'.png'))
rm(img)
gc()
cat('*\tTime:',Sys.time()-t,'\n')}}
files=paste0('C:/Users/Ari/Downloads/wc2.1_30s_bio/',
list.files('C:/USers/Ari/Downloads/wc2.1_30s_bio'))
for(file in files){tif2png(file,'C:/Users/Ari/Desktop/bioclim')}
256^3
256^3/1180
floor(256^3/1180)
floor(log10(256^3/1180))
floor(log10(256^3/.001))
floor(log10(256^3/.0001))
floor(log10(256^3/.00000001))
tif
shader=(\(path){
path
return(function(code){
write(code,'input.txt')
system2('open',paste0(path,'/program/shader_windows.console.exe'))})
})(funr::get_script_path())
decimalplaces=function(n){
if(n-round(n)<=.Machine$double.eps^0.5){return(0)}
nchar(strsplit(sub('0+$','',as.character(n)),".",fixed=T)[[1]][[2]])}
dec2bin=function(n){ #takes input of positive numeric decimal
if(is.na(n)){return(rep('-',32))}
output=as.numeric(intToBits(n))
return(output)}
bin2dec=function(n){
strtoi(stringi::stri_reverse(n),base=2)} #takes input of vector representation of binary value
clamp=function(x,l,u){ifelse(x<l,l,ifelse(x>u,u,x))}
split_mat=function(mat,n=16000){
size=ceiling(dim(mat)[-3]/n) #16000 pixel max size of chunk
lapply(1:size[2],\(x){
lapply(1:size[1],\(y){
cat(x,y,'  \r')
mat[((y-1)*n+1):clamp(y*n,0,dim(mat)[1]),((x-1)*n+1):clamp(x*n,0,dim(mat)[2])]})})|>
unlist(recursive=F)}
tif2png=function(tif,dst){
options(scipen=999)
cat('Loading TIF image\n')
file=strsplit(tif,'/')[[1]][length(strsplit(tif,'/')[[1]])]|>
gsub('.tif','',x=_)
img=(raster::raster(tif)|>
raster::as.matrix())
images=split_mat(img)
rm(img)
gc()
cat('Converting values to png layers\n')
for(index in 1:length(images)){
t=Sys.time()
cat('chunk',index,'\n')
img=images[[index]]
img[is.na(img)]=0
cat('*\tGrabbing unique values\n')
n=unique(abs(as.numeric(img)))
dp=min(c(floor(log10(256^3/max(n))),128))
img=floor(img*(10^dp))
n=unique(abs(as.numeric(img)))|>
c(0)
cat('*\tBuilding lookup table with scale of',dp,'\n')
lookup=
sapply(n,dec2bin)|>
paste(collapse='')|>
stringi::stri_sub(seq(1,32*length(n),by=32),length=32)|>
sapply(\(s)stringi::stri_sub(s,c(1,9,17,25),length=8))|>
apply(1,\(n)bin2dec(n))|>
data.table::as.data.table()|>
cbind(as.character(n))|>
setNames(c(1,2,3,4,'n'))|>
unique()
data.table::setindex(lookup,n)
cat('*\tConverting data\n')
output=lookup[as.character(abs(img)),on='n']
output=lapply(1:3,\(l)matrix(output[[l]]/255,ncol=ncol(img)))|>
c(list(((img>=0)-.5)*dp/255+.5))|>
simplify2array()
output[is.na(output)]=0
cat('*\tSaving PNG image\n')
if(all(is.na(output[,,4]))){
cat('No data\n')
return()}
dir.create(paste0(dst,'/',file),showWarnings=F)
png::writePNG(output[,,],paste0(dst,'/',file,'/',file,'_',index,'.png'))
rm(img)
gc()
cat('*\tTime:',Sys.time()-t,'\n')}}
files=paste0('C:/Users/Ari/Downloads/wc2.1_30s_bio/',
list.files('C:/USers/Ari/Downloads/wc2.1_30s_bio'))
for(file in files){tif2png(file,'C:/Users/Ari/Desktop/bioclim')}
coordinate_data=function(file,coords){##TO DO implement as compute shader in glsl
img=png::readPNG(file)*255
value=img[,,1]+img[,,2]*256+img[,,3]*256*256+(img[,,4]-(255/2))*2
lapply(coords,\(coord){
x=(coord[2]+180)/360*ncol(value)
y=(90-coord[1])/180*nrow(value)
data.frame('file'=file,'long'=coord[2],'lat'=coord[1],'value'=value[y,x])})|>
do.call(rbind,args=_)}
coordinate_data('C:/Users/Ari/Desktop/bioclim10m/wc2.1_10m_bio_1_1.png',list(c(0,0),c(39.5299,119.81),c(43,116)))
coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',list(c(0,0),c(39.5299,119.81),c(43,116)))
t=sys.time()
t=Sys.time()
t=Sys.time()
coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',list(c(0,0),c(39.5299,119.81),c(43,116)))
Sys.time()-t
t=Sys.time()
coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_1.png',list(c(0,0),c(39.5299,119.81),c(43,116)))
Sys.time()-t
pairs=lapply(1:1000,\(x)c(runif(-90,90),runif(-180,180)))
pairs=lapply(1:1000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
pairs
pairs=lapply(1:1,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
pairs=lapply(1:100,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
pairs=lapply(1:1000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
pairs=lapply(1:1000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
pairs=lapply(1:100000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
pairs
pairs=lapply(1:100000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
pairs=lapply(1:10000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
pairs=lapply(1:1000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
files='C:/Users/Ari/Downloads/wc2.1_5m_tmin/wc2.1_5m_tmin_01.tif'
for(file in files){tif2png(file,'C:/Users/Ari/Desktop')}
shader=(\(path){
path
return(function(code){
write(code,'input.txt')
system2('open',paste0(path,'/program/shader_windows.console.exe'))})
})(funr::get_script_path())
decimalplaces=function(n){
if(n-round(n)<=.Machine$double.eps^0.5){return(0)}
nchar(strsplit(sub('0+$','',as.character(n)),".",fixed=T)[[1]][[2]])}
dec2bin=function(n){ #takes input of positive numeric decimal
if(is.na(n)){return(rep('-',32))}
output=as.numeric(intToBits(n))
return(output)}
bin2dec=function(n){
strtoi(stringi::stri_reverse(n),base=2)} #takes input of vector representation of binary value
clamp=function(x,l,u){ifelse(x<l,l,ifelse(x>u,u,x))}
split_mat=function(mat,n=16000){
size=ceiling(dim(mat)[-3]/n) #16000 pixel max size of chunk
lapply(1:size[2],\(x){
lapply(1:size[1],\(y){
cat(x,y,'  \r')
mat[((y-1)*n+1):clamp(y*n,0,dim(mat)[1]),((x-1)*n+1):clamp(x*n,0,dim(mat)[2])]})})|>
unlist(recursive=F)}
tif2png=function(tif,dst){
options(scipen=999)
cat('Loading TIF image\n')
file=strsplit(tif,'/')[[1]][length(strsplit(tif,'/')[[1]])]|>
gsub('.tif','',x=_)
img=(raster::raster(tif)|>
raster::as.matrix())
images=split_mat(img)
rm(img)
gc()
cat('Converting values to png layers\n')
for(index in 1:length(images)){
t=Sys.time()
cat('chunk',index,'\n')
img=images[[index]]
img[is.na(img)]=0
cat('*\tGrabbing unique values\n')
n=unique(abs(as.numeric(img)))
dp=min(c(floor(log10(256^3/max(n))),128))
img=floor(img*(10^dp))
n=unique(abs(as.numeric(img)))|>
c(0)
cat('*\tBuilding lookup table with scale of',dp,'\n')
lookup=
sapply(n,dec2bin)|>
paste(collapse='')|>
stringi::stri_sub(seq(1,32*length(n),by=32),length=32)|>
sapply(\(s)stringi::stri_sub(s,c(1,9,17,25),length=8))|>
apply(1,\(n)bin2dec(n))|>
data.table::as.data.table()|>
cbind(as.character(n))|>
setNames(c(1,2,3,4,'n'))|>
unique()
data.table::setindex(lookup,n)
cat('*\tConverting data\n')
output=lookup[as.character(abs(img)),on='n']
output=lapply(1:3,\(l)matrix(output[[l]]/255,ncol=ncol(img)))|>
c(list(((img>=0)-.5)*dp/255+.5))|>
simplify2array()
output[is.na(output)]=0
cat('*\tSaving PNG image\n')
if(all(is.na(output[,,4]))){
cat('No data\n')
return()}
dir.create(paste0(dst,'/',file),showWarnings=F)
png::writePNG(output[,,],paste0(dst,'/',file,'/',file,'_',index,'.png'))
rm(img)
gc()
cat('*\tTime:',Sys.time()-t,'\n')}}
for(file in files){tif2png(file,'C:/Users/Ari/Desktop')}
files='C:/Users/Ari/Downloads/wc2.1_2.5m_tmin/wc2.1_2.5m_tmin_01.tif'
for(file in files){tif2png(file,'C:/Users/Ari/Desktop')}
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
pairs
paste(pairs,'[')
as.character(pairs)
as.character(pairs)|>gsub('(',']',x=_)
as.character(pairs)|>gsub('\(','\]',x=_)
as.character(pairs)|>gsub('\\(','\]',x=_)
sapply(pairs,\(pair)paste0('[',pair[1],',',pair[2]))
sapply(pairs,\(pair)paste0('[',pair[1],',',pair[2],']'))
sapply(pairs,\(pair)paste0('[',pair[1],',',pair[2],']'))
sapply(pairs,\(pair)paste0('[',pair[1],',',pair[2],']'))|>
paste(collapse=',')
paste0('[',sapply(pairs,\(pair)paste0('[',pair[1],',',pair[2],']'))|>
paste(collapse=','),']')
file='C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png'
coords=pairs
coords=paste0('[',sapply(coords,\(pair)paste0('[',pair[1],',',pair[2],']'))|>
paste(collapse=','),']')
script=glue::glue('
mode:save
binding:2
input: {{"set":0,"binding":[0,1,2],"type":"sampler2D","value":"{file}"}}
coords:{{"set":0,"binding":3,"type":"vec2","value":{coords}}}
#[compute]
#version 450
layout(local_size_x = 2, local_size_y = 1, local_size_z = 1) in; //in x, y dimension
layout(set = 0, binding = 0) uniform sampler2D heightmap; //Input texture
layout(set = 0, binding = 2, std430) restrict buffer SizeDataBuffer{{ // Texture size info
int width;
int height;}}
size_data;
layout(set = 0, binding = 3, std430) restrict buffer MyDataBufferx{{ //Input coordinates
vec2 data[];}}
coords;
void main(){{
float x    = (coords.data[gl_GlobalInvocationID.x].x+180.0)/360.0*float(size_data.width);
float y    = (90.0-coords.data[gl_GlobalInvocationID.x].y)/180.0*float(size_data.height);
vec2 pos   = vec2(x,y);
vec4 color = texture(heightmap,pos);
coords.data[gl_GlobalInvocationID.x].x = float(color[0]);}}')
script
coordinate_data=function(file,coords){
if(!file.exists(file)){
cat('File does not exist\n')
return()}
src='compute_output.txt'
if(file.exists(src)){file.remove(src)}
coords=paste0('[',sapply(coords,\(pair)paste0('[',pair[1],',',pair[2],']'))|>
paste(collapse=','),']')
script=glue::glue('
mode:save
binding:2
input: {{"set":0,"binding":[0,1,2],"type":"sampler2D","value":"{file}"}}
coords:{{"set":0,"binding":3,"type":"vec2","value":{coords}}}
#[compute]
#version 450
layout(local_size_x = 2, local_size_y = 1, local_size_z = 1) in; //in x, y dimension
layout(set = 0, binding = 0) uniform sampler2D heightmap; //Input texture
layout(set = 0, binding = 2, std430) restrict buffer SizeDataBuffer{{ // Texture size info
int width;
int height;}}
size_data;
layout(set = 0, binding = 3, std430) restrict buffer MyDataBufferx{{ //Input coordinates
vec2 data[];}}
coords;
void main(){{
float x    = (coords.data[gl_GlobalInvocationID.x].x+180.0)/360.0*float(size_data.width);
float y    = (90.0-coords.data[gl_GlobalInvocationID.x].y)/180.0*float(size_data.height);
vec2 pos   = vec2(x,y);
vec4 color = texture(heightmap,pos);
coords.data[gl_GlobalInvocationID.x].x = float(color[0]);}}')
shader(script)
while(!file.exists(src)){Sys.sleep(.1)}
output=read.table(src)
return(output)}
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_6.png',pairs)
Sys.time()-t
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
shader=(\(path){
path
return(function(code){
write(code,'input.txt')
system2('open',paste0(path,'/program/shader_windows.console.exe'))})
})(funr::get_script_path())
shader
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
funr::get_script_path()
funr::get_script_path()
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png')
Sys.time()-t
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
1+1
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png')
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png')
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png',pairs)
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('C:/Users/Ari/Desktop/wc2.1_2.5m_tmin_01/wc2.1_2.5m_tmin_01_1.png')
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_1.png',pairs)
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_1.png')
Sys.time()-t
pairs
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_1.png',pairs)
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_1.png')
a=sapply(pairs,\(i)p[i[0],i[1],1])
Sys.time()-t
a
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_1.png')
a=sapply(pairs,\(i)p[i[0],i[1],1])
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_2.png',pairs)
Sys.time()-t
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_2.png')
a=sapply(pairs,\(i)p[i[0],i[1],1])
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_3.png',pairs)
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_3.png',pairs)
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_3.png')
a=sapply(pairs,\(i)p[i[0],i[1],1])
Sys.time()-t
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png')
a=sapply(pairs,\(i)p[i[0],i[1],1])
Sys.time()-t
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png',pairs)
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:10,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png',pairs)
Sys.time()-t
t=Sys.time()
p=png::readPNG('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png')
a=sapply(pairs,\(i)p[i[0],i[1],1])
Sys.time()-t
source('C:/Users/Ari/Documents/Scripts/Shading_interface/shader_link.R')
pairs=lapply(1:1000,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png',pairs)
pairs=lapply(1:100,\(x)c(runif(1,-90,90),runif(1,-180,180)))
t=Sys.time()
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png',pairs)
a=coordinate_data('D:/bioclim/wc2.1_30s_bio_1/wc2.1_30s_bio_1_5.png',pairs)
