extends TextEdit



func _ready():
	var keywords = {'#d76274':[
		'void',
		'bool',
		'bvec2',
		'bvec3',
		'bvec4',
		'int',
		'ivec2',
		'ivec3',
		'ivec4',
		'uint',
		'uvec2',
		'uvec3',
		'uvec4',
		'float',
		'vec2',
		'vec3',
		'vec4',
		'mat2',
		'mat3',
		'mat4',
		'sampler2D',
		'isampler2D',
		'usampler2D',
		'sampler2DArray',
		'isampler2DArray',
		'usampler2DArray',
		'sampler3D',
		'isampler3D',
		'usampler3D',
		'samplerCube',
		'samplerCubeArray',
		'const',
		'lowp',
		'struct',
		'return',
		'if',
		'else',
		'switch',
		'case',
		'break',
		'while',
		'do',
		'discard',
		'inout',
		'varying',
		'uniform',
		'flat',
		'smooth',
		'shader_type',
		'canvas_item',
		'spatial',
		'particles',
		'sky',
		'fog',
		'UV',
		'COLOR',
		'VERTEX',
		'TIME'],
	'#509874':['1','2','3','4','5','6','7','8','9','0'],
	'179fe0':[
		'fragment',
		'radians',
		'degrees',
		'sin',
		'cos',
		'tan',
		'asin',
		'acos',
		'atan',
		'sinh',
		'cosh',
		'tanh',
		'asinh',
		'acosh',
		'atanh',
		'pow',
		'exp',
		'exp2',
		'log',
		'log2',
		'sqrt',
		'inversesqrt',
		'abs',
		'sign',
		'floor',
		'round',
		'roundEven',
		'trunc',
		'ceil',
		'fract',
		'mod',
		'modf',
		'min',
		'max',
		'clamp',
		'mix',
		'fma',
		'step',
		'smoothstep',
		'isnan',
		'isinf',
		'floatBitsToInt',
		'floatBitsToUint',
		'intBitsToFloat',
		'uintBitsToFloat',
		'length',
		'distance',
		'dot',
		'cross',
		'normalize',
		'refract',
		'faceforward',
		'matrixCompMult',
		'outerProduct',
		'transpose',
		'determinant',
		'inverse',
		'lessThan',
		'greaterThan',
		'lessThanEqual',
		'greaterThanEqual',
		'equal',
		'notEqual',
		'any',
		'all',
		'not',
		'textureSize',
		'textureQueryLod',
		'textureQueryLevels',
		'texture',
		'textureProj',
		'textureLod',
		'textureProjLod',
		'textureGrad',
		'textureProjGrad',
		'texelFetch',
		'textureGather',
		'dFdx',
		'dFdxCoarse',
		'dFdxFine',
		'dFdy',
		'dFdyCoarse',
		'dFdyFine',
		'fwidth',
		'fwidthCoarse',
		'fwidthFine',
		'packHalf2x16',
		'unpackHalf2x16',
		'packUnorm2x16',
		'unpackUnorm2x16',
		'packSnorm2x16',
		'unpackSnorm2x16',
		'packUnorm4x8',
		'unpackUnorm4x8',
		'packSnorm4x8',
		'unpackSnorm4x8',
		'bitfieldExtract',
		'bitfieldInsert',
		'bitfieldReverse',
		'bitCount',
		'findMSB',
		'imulExtended',
		'umulExtended',
		'uaddCarry',
		'usubBorrow',
		'ldexp',
		'frexp']}
		
	for color in keywords:
		for keyword in keywords[color]:
			self.get_syntax_highlighter().add_keyword_color(keyword, Color(color))

